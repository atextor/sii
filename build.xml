<project name="sii" default="compile" basedir=".">

<property name="software.author" value="Andreas Textor"/>
<property name="software.version" value="1.0"/>
<property name="software.title" value="Studying in Ireland"/>

<property name="base.dir" location="." />
<property name="sources.dir" value="${base.dir}/src" />
<property name="build.dir" value="${base.dir}/bin" />
<property name="res.dir" value="${base.dir}/res" />
<property name="tools.dir" value="${base.dir}/tools"/>
<property name="outname.jar" location="sii.jar" />
<property name="outname.exe" location="sii.exe" />
<property name="launch4j.xml" location="${tools.dir}/launch4j.xml" />

<target name="init">
	<property name="scala-library.jar" value="${tools.dir}/scala-library.jar" />
	<property name="scala-compiler.jar" value="${tools.dir}/scala-compiler.jar" />
	<path id="build.classpath">
		<pathelement location="${scala-library.jar}" />
		<pathelement location="${build.dir}"  />
	</path>
	<taskdef resource="scala/tools/ant/antlib.xml">
		<classpath>
			<pathelement location="${scala-compiler.jar}" />
			<pathelement location="${scala-library.jar}" />
		</classpath>
	</taskdef>
</target>

<target name="compile" depends="init">
	<scalac force="true" deprecation="on"
		srcdir="${sources.dir}" includes="**/*.scala"
		classpathref="build.classpath" destdir="${build.dir}">
	</scalac>
</target>

<target name="jarmanifest" depends="init">
	<zip destfile="manifest.jar" basedir="." includes="META-INF/MANIFEST.MF" />
</target>

<target name="jar" depends="compile,jarmanifest">
	<taskdef resource="proguard/ant/task.properties"
		classpath="${tools.dir}/proguard.jar" />
	<property name="java-rt.jar" location="${java.home}/lib/rt.jar" />
	<proguard>
		-injars ${build.dir}(!.svn)
		-injars ${scala-library.jar}(!META-INF/MANIFEST.MF,!library.properties)
		-injars manifest.jar
		-injars ${res.dir}(!.svn)
		-outjars ${outname.jar}
		-libraryjars ${java-rt.jar}
		-dontoptimize
		-dontobfuscate
		-dontpreverify
		-dontnote
		-dontwarn
		-ignorewarnings
		-keep public class scala.ScalaObject
		-keep class de.kantico.**
		-keep public class java.**
		-keep public class javax.**
		-keepnames class **
		-keepclasseswithmembers public class * {
			public static void main(java.lang.String[]);
		}
	</proguard>
</target>

<target name="exe" depends="jar">
	<taskdef name="launch4j"
		classname="net.sf.launch4j.ant.Launch4jTask"
		classpath="${tools.dir}/launch4j/launch4j.jar:${tools.dir}/launch4j/lib/xstream.jar" />
	<property name="launch4j.dir" location="${tools.dir}/launch4j" />
	<property name="icon.file" location="${res.dir}/icon.ico"/>
	<property name="splash.file" location="${res.dir}/splash.bmp"/>
	<copy file="${launch4j.xml}.template" tofile="${launch4j.xml}"/>
	<replace file="${launch4j.xml}">
		<replacefilter token="@JARFILE@" value="${outname.jar}"/>
		<replacefilter token="@EXEFILE@" value="${outname.exe}"/>
		<replacefilter token="@ICONFILE@" value="${icon.file}"/>
		<replacefilter token="@SPLASHFILE@" value="${splash.file}"/>
		<replacefilter token="@VERSION@" value="${software.version}"/>
		<replacefilter token="@AUTHOR@" value="${software.author}"/>
		<replacefilter token="@TITLE@" value="${software.title}"/>
		<replacefilter token="@FILENAME@" value="${ant.project.name}"/>
	</replace>
	<launch4j configFile="${launch4j.xml}" jar="${outname.jar}" outfile="${outname.exe}" />
	<delete file="${launch4j.xml}" />
</target>

<target name="clean" depends="init">
	<delete file="manifest.jar" />
	<delete file="${outname.exe}" />
	<delete file="${outname.jar}" />
	<delete includeemptydirs="true">
		<fileset dir="${build.dir}" includes="**/*" />
	</delete>
</target>

<target name="run" depends="compile">
	<java classname="de.kantico.sii.game.Sii">
		<classpath>
			<pathelement location="${build.dir}" />
			<pathelement location="${scala-library.jar}" />
			<pathelement location="${res.dir}" />
		</classpath>
	</java>
</target>

</project>
